-- Tabel Users
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255)
);

-- Tabel Events
CREATE TABLE events (
    event_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    event_date DATE NOT NULL,
    start_time TIME,
    end_time TIME,
    location VARCHAR(255),
    banner_url VARCHAR(255),
    creator_id INT,
    FOREIGN KEY (creator_id) REFERENCES users(user_id)
);

-- Tabel Event Materials
CREATE TABLE event_materials (
    material_id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT,
    material_url VARCHAR(255),
    title VARCHAR(255),
    description TEXT,
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

-- Tabel Speakers
CREATE TABLE speakers (
    speaker_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    biography TEXT,
    profile_pic_url VARCHAR(255)
);

-- Tabel Event Speakers
CREATE TABLE event_speakers (
    event_id INT,
    speaker_id INT,
    PRIMARY KEY (event_id, speaker_id),
    FOREIGN KEY (event_id) REFERENCES events(event_id),
    FOREIGN KEY (speaker_id) REFERENCES speakers(speaker_id)
);

-- Tabel Exhibitors
CREATE TABLE exhibitors (
    exhibitor_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    logo_url VARCHAR(255),
    event_id INT,
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

-- Tabel Sponsors
CREATE TABLE sponsors (
    sponsor_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    logo_url VARCHAR(255),
    event_id INT,
    sponsor_type VARCHAR(255),
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

-- Tabel Messages
CREATE TABLE messages (
    message_id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT,
    receiver_id INT,
    message TEXT,
    sent_time DATETIME,
    FOREIGN KEY (sender_id) REFERENCES users(user_id),
    FOREIGN KEY (receiver_id) REFERENCES users(user_id)
);

-- Tabel Maps
CREATE TABLE maps (
    map_id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT,
    map_url VARCHAR(255),
    description TEXT,
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

-- Tabel News
CREATE TABLE news (
    news_id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT,
    title VARCHAR(255),
    content TEXT,
    post_time DATETIME,
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

-- Tabel Gallery
CREATE TABLE gallery (
    image_id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT,
    image_url VARCHAR(255),
    caption TEXT,
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

-- Tabel Surveys
CREATE TABLE surveys (
    survey_id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    start_time DATETIME,
    end_time DATETIME,
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

-- Tabel Survey Questions
CREATE TABLE survey_questions (
    question_id INT AUTO_INCREMENT PRIMARY KEY,
    survey_id INT,
    question_text TEXT NOT NULL,
    question_type ENUM('text', 'multiple_choice', 'single_choice', 'rating'),
    FOREIGN KEY (survey_id) REFERENCES surveys(survey_id)
);

-- Tabel Question Options
CREATE TABLE question_options (
    option_id INT AUTO_INCREMENT PRIMARY KEY,
    question_id INT,
    option_text VARCHAR(255) NOT NULL,
    FOREIGN KEY (question_id) REFERENCES survey_questions(question_id)
);

-- Tabel Survey Responses
CREATE TABLE survey_responses (
    response_id INT AUTO_INCREMENT PRIMARY KEY,
    question_id INT,
    user_id INT,
    response TEXT,
    FOREIGN KEY (question_id) REFERENCES survey_questions(question_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Tabel Attendees
CREATE TABLE attendees (
    attendee_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    event_id INT,
    check_in_time DATETIME,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (event_id) REFERENCES events(event_id)
);

-- Tabel Community Discussions
CREATE TABLE community_discussions (
    discussion_id INT AUTO_INCREMENT PRIMARY KEY,
    topic VARCHAR(255),
    description TEXT,
    start_time DATETIME
);


source code untuk ddl 